<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:util="http://www.springframework.org/schema/util"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util-4.2.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.2.xsd"> 
    
    <!--导入外部properties文件 -->  
    <context:property-placeholder location="classpath:jdbc.properties"/>
     
    <!-- 定义数据源的信息 -->  
    <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">
        <property name="driverClass" value="${driverClass}"></property>  
        <property name="jdbcUrl" value="${jdbcUrl}"></property>  
        <property name="user" value="${user}"></property>  
        <property name="password" value="${password}"></property>  
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <property name="initialPoolSize" value="3"></property>  
        <!--连接池中保留的最小连接数。Default: 3 -->  
        <property name="minPoolSize" value="3"></property>  
        <!--连接池中保留的最大连接数。Default: 15 -->  
        <property name="maxPoolSize" value="5"></property>  
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement" value="3"></property>  
        <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->  
        <property name="maxStatements" value="8"></property>  
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->  
        <property name="maxStatementsPerConnection" value="5"></property>  
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
        <property name="maxIdleTime" value="1800"></property>  
    </bean>  
    
   	<!--定义Hibernate的SessionFactory -->  
    <!-- SessionFactory使用的数据源为上面的数据源 -->  
    <!-- 指定了Hibernate的映射文件和配置信息 -->  
    <bean id="sessionFactory"  
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">  
        <property name="dataSource" ref="datasource"></property>  
        <property name="mappingResources">  
            <list>  
                <value>cn/edu/sicnu/po/User.hbm.xml</value>  
            </list>  
        </property>  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>  
            </props>  
        </property>  
    </bean>  
  
  	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类-->
    <!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现类-->
    <bean id="transactionManager"  
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
    
    <!--配置事务增强处理Bean,指定事务管理器-->
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
         <!--用于配置详细的事务语义-->
         <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false" />
         </tx:attributes>
   </tx:advice>
   
   <aop:config proxy-target-class="true">
   		<!--配置一个切入点 "*"匹配符表示一个任意类型的参数 "."匹配符表示零个或多个任意类型的参数-->
   		<aop:pointcut id="servicePointcut" expression="execution(* cn.edu.sicnu.serviceImpl.*.*(..))"/>          
   		<!--指定在servicePointcut切入点应用txAdvice事务增强处理-->
        <aop:advisor  advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
   </aop:config>
  
    <!-- 依赖注入 -->
    <import resource="applicationContext_user.xml"/>
</beans>